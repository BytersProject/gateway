name: "Code Checking"

on:
  push:
    branches:
      - main
  pull_request:

env:
  MIX_ENV: test

jobs:
  formatting:
    name: "Formatting"
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        elixir: [1.12.3]
        otp: [23.1.3]
    steps:
    - uses: actions/checkout@v2
    #s Initial Setup
    - name: "Setup Elixir"
      uses: actions/setup-elixir@v1
      with:
        elixir-version: ${{ matrix.elixir }} # Define the elixir version [required]
        otp-version: ${{ matrix.otp }} # Define the OTP version [required]
    #s Dependencies
    - name: "Retrieve Mix Dependencies Cache"
      uses: actions/cache@v1
      id: mix-cache #id to use in retrieve action
      with:
        path: deps
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
    - name: "Install Mix Dependencies"
      if: steps.mix-cache.outputs.cache-hit != 'true'
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get
    #e Dependencies
    #e Initial Setup
    - name: "Check Formatting"
      run: mix format --check-formatted
    - name: "Run Credo"
      run: mix credo --strict

  staticAnalysis:
    name: "Static Analysis"
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        elixir: [1.12.3]
        otp: [23.1.3]
    steps:
    - uses: actions/checkout@v2
    #s Initial Setup
    - name: "Setup Elixir"
      uses: actions/setup-elixir@v1
      with:
        elixir-version: ${{ matrix.elixir }} # Define the elixir version [required]
        otp-version: ${{ matrix.otp }} # Define the OTP version [required]
    #s Dependencies
    - name: "Retrieve Mix Dependencies Cache"
      uses: actions/cache@v1
      id: mix-cache #id to use in retrieve action
      with:
        path: deps
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
    - name: "Install Mix Dependencies"
      if: steps.mix-cache.outputs.cache-hit != 'true'
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get
    #e Dependencies
    #e Initial Setup
    - name: Retrieve PLT Cache
      uses: actions/cache@v1
      id: plt-cache
      with:
        path: priv/plts
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
    - name: Create PLTs
      if: steps.plt-cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p priv/plts
        mix dialyzer --plt
    - name: Run dialyzer
      run: mix dialyzer --no-check --halt-exit-status
